# Criar uma classe que representará uma aeronave militar com o nome JatoMilitar1Lugar. O método construtor deverá receber duas informações iniciais:
# o modelo e a base onde a aeronave está; Crie um método chamado designar_piloto, que deverá receber o nome do piloto como parâmetro.
# Criar um método rebasear_aeronave, que deverá receber de parâmetro o nome da base para onde a aeronave deverá ser enviada.
# Antes de registrar, é necessário validar se o piloto foi designado para a aeronave, e somente se houver piloto, registrar
# a informação de rebaseamento, a data e hora que a movimentação foi realizada, deverá ser registrada também.
# Sobrescreva o métod __str__ da classe, para imprimir o seguinte conteúdo:
# Jato: <NOME DA AERONAVE> Base inicial: <NOME DA BASE DE ORIGEM> Piloto: <NOME DO PILOTO DESIGNADO>
# Histórico de transferências: <LISTAGEM DAS BASES PELAS QUAIS A AERONAVE PASSOU MOSTRANDO A DATA / HORA E BASE>

from datetime import datetime
data_atual = datetime.now()

class JatoMilitar1Lugar:
    def __str__(modelo, base):
        print('=' * 100)
        print(f'O modelo da aeronave é o(a) {modelo} e está localizada na base {base}.')
        print(f'Data de Saída: {data_atual.day}/{data_atual.month}/{data_atual.year}, /'
              f' Hora de Saída: {data_atual.hour}:{data_atual.minute}:{data_atual.second}.')
        print('=' * 100)

    def designar_piloto(nome, modelo):
        pilotos_autorizados = ['Hilário', 'João Menelau', 'Maverick', 'John Doe']
        if nome not in pilotos_autorizados:
            print(f'O piloto {nome} não está autorizado a pilotar a aeronave {modelo}.')
            print('=' * 100)
        else:
            print(f'O piloto {nome} está autorizado a pilotar a aeronave {modelo}.')
            print('=' * 100)

    def rebasear_aeronave(base_nova, nome, base):
        print(f'O piloto {nome} está autorizado a mudar a aeronave da base '
              f'{base} para a nova base {base_nova}.')
        print(f'Data de Chegada: {data_atual.day}/{data_atual.month}/{data_atual.year}, /'
              f' Hora de Chegada: {data_atual.hour}:{data_atual.minute}:{data_atual.second}.')
        print('=' * 100)
